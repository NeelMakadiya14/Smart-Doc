{"ast":null,"code":"/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\nimport * as pair from './pair.js';\nimport * as map from './map.js';\n/* istanbul ignore next */\n\n/**\n * @type {Document}\n */\n\nexport var doc =\n/** @type {Document} */\ntypeof document !== 'undefined' ? document : {};\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\n\n/* istanbul ignore next */\n\nexport var createElement = function createElement(name) {\n  return doc.createElement(name);\n};\n/**\n * @return {DocumentFragment}\n */\n\n/* istanbul ignore next */\n\nexport var createDocumentFragment = function createDocumentFragment() {\n  return doc.createDocumentFragment();\n};\n/**\n * @param {string} text\n * @return {Text}\n */\n\n/* istanbul ignore next */\n\nexport var createTextNode = function createTextNode(text) {\n  return doc.createTextNode(text);\n};\n/* istanbul ignore next */\n\nexport var domParser =\n/** @type {DOMParser} */\ntypeof DOMParser !== 'undefined' ? new DOMParser() : null;\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\n\n/* istanbul ignore next */\n\nexport var emitCustomEvent = function emitCustomEvent(el, name, opts) {\n  return el.dispatchEvent(new CustomEvent(name, opts));\n};\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\n\n/* istanbul ignore next */\n\nexport var setAttributes = function setAttributes(el, attrs) {\n  pair.forEach(attrs, function (key, value) {\n    if (value === false) {\n      el.removeAttribute(key);\n    } else if (value === true) {\n      el.setAttribute(key, '');\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value);\n    }\n  });\n  return el;\n};\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\n\n/* istanbul ignore next */\n\nexport var setAttributesMap = function setAttributesMap(el, attrs) {\n  attrs.forEach(function (value, key) {\n    el.setAttribute(key, value);\n  });\n  return el;\n};\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\n\n/* istanbul ignore next */\n\nexport var fragment = function fragment(children) {\n  var fragment = createDocumentFragment();\n\n  for (var i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i]);\n  }\n\n  return fragment;\n};\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\n\n/* istanbul ignore next */\n\nexport var append = function append(parent, nodes) {\n  appendChild(parent, fragment(nodes));\n  return parent;\n};\n/**\n * @param {HTMLElement} el\n */\n\n/* istanbul ignore next */\n\nexport var remove = function remove(el) {\n  return el.remove();\n};\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n\n/* istanbul ignore next */\n\nexport var addEventListener = function addEventListener(el, name, f) {\n  return el.addEventListener(name, f);\n};\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n\n/* istanbul ignore next */\n\nexport var removeEventListener = function removeEventListener(el, name, f) {\n  return el.removeEventListener(name, f);\n};\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n\n/* istanbul ignore next */\n\nexport var addEventListeners = function addEventListeners(node, listeners) {\n  pair.forEach(listeners, function (name, f) {\n    return addEventListener(node, name, f);\n  });\n  return node;\n};\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n\n/* istanbul ignore next */\n\nexport var removeEventListeners = function removeEventListeners(node, listeners) {\n  pair.forEach(listeners, function (name, f) {\n    return removeEventListener(node, name, f);\n  });\n  return node;\n};\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\n\n/* istanbul ignore next */\n\nexport var element = function element(name) {\n  var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var children = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return append(setAttributes(createElement(name), attrs), children);\n};\n/**\n * @param {number} width\n * @param {number} height\n */\n\n/* istanbul ignore next */\n\nexport var canvas = function canvas(width, height) {\n  var c =\n  /** @type {HTMLCanvasElement} */\n  createElement('canvas');\n  c.height = height;\n  c.width = width;\n  return c;\n};\n/**\n * @param {string} t\n * @return {Text}\n */\n\n/* istanbul ignore next */\n\nexport var text = createTextNode;\n/**\n * @param {pair.Pair<string,string>} pair\n */\n\n/* istanbul ignore next */\n\nexport var pairToStyleString = function pairToStyleString(pair) {\n  return \"\".concat(pair.left, \":\").concat(pair.right, \";\");\n};\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\n\n/* istanbul ignore next */\n\nexport var pairsToStyleString = function pairsToStyleString(pairs) {\n  return pairs.map(pairToStyleString).join('');\n};\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\n\n/* istanbul ignore next */\n\nexport var mapToStyleString = function mapToStyleString(m) {\n  return map.map(m, function (value, key) {\n    return \"\".concat(key, \":\").concat(value, \";\");\n  }).join('');\n};\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\n\n/* istanbul ignore next */\n\nexport var querySelector = function querySelector(el, query) {\n  return el.querySelector(query);\n};\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\n\n/* istanbul ignore next */\n\nexport var querySelectorAll = function querySelectorAll(el, query) {\n  return el.querySelectorAll(query);\n};\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\n\n/* istanbul ignore next */\n\nexport var getElementById = function getElementById(id) {\n  return (\n    /** @type {HTMLElement} */\n    doc.getElementById(id)\n  );\n};\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n\n/* istanbul ignore next */\n\nvar _parse = function _parse(html) {\n  return domParser.parseFromString(\"<html><body>\".concat(html, \"</body></html>\"), 'text/html').body;\n};\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\n\n/* istanbul ignore next */\n\n\nexport var parseFragment = function parseFragment(html) {\n  return fragment(\n  /** @type {any} */\n  _parse(html).childNodes);\n};\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n\n/* istanbul ignore next */\n\nexport var parseElement = function parseElement(html) {\n  return (\n    /** @type HTMLElement */\n    _parse(html).firstElementChild\n  );\n};\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\n\n/* istanbul ignore next */\n\nexport var replaceWith = function replaceWith(oldEl, newEl) {\n  return oldEl.replaceWith(newEl);\n};\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\n\n/* istanbul ignore next */\n\nexport var insertBefore = function insertBefore(parent, el, ref) {\n  return parent.insertBefore(el, ref);\n};\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\n\n/* istanbul ignore next */\n\nexport var appendChild = function appendChild(parent, child) {\n  return parent.appendChild(child);\n};\nexport var ELEMENT_NODE = doc.ELEMENT_NODE;\nexport var TEXT_NODE = doc.TEXT_NODE;\nexport var CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE;\nexport var COMMENT_NODE = doc.COMMENT_NODE;\nexport var DOCUMENT_NODE = doc.DOCUMENT_NODE;\nexport var DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE;\nexport var DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE;\n/**\n * @param {any} node\n * @param {number} type\n */\n\nexport var checkNodeType = function checkNodeType(node, type) {\n  return node.nodeType === type;\n};\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\n\nexport var isParentOf = function isParentOf(parent, child) {\n  var p = child.parentNode;\n\n  while (p && p !== parent) {\n    p = p.parentNode;\n  }\n\n  return p === parent;\n};","map":{"version":3,"sources":["/media/neel/DATA/WebD/Smart Doc/client/node_modules/lib0/dom.js"],"names":["pair","map","doc","document","createElement","name","createDocumentFragment","createTextNode","text","domParser","DOMParser","emitCustomEvent","el","opts","dispatchEvent","CustomEvent","setAttributes","attrs","forEach","key","value","removeAttribute","setAttribute","setAttributesMap","fragment","children","i","length","appendChild","append","parent","nodes","remove","addEventListener","f","removeEventListener","addEventListeners","node","listeners","removeEventListeners","element","canvas","width","height","c","pairToStyleString","left","right","pairsToStyleString","pairs","join","mapToStyleString","m","querySelector","query","querySelectorAll","getElementById","id","_parse","html","parseFromString","body","parseFragment","childNodes","parseElement","firstElementChild","replaceWith","oldEl","newEl","insertBefore","ref","child","ELEMENT_NODE","TEXT_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","checkNodeType","type","nodeType","isParentOf","p","parentNode"],"mappings":"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","sourcesContent":["/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* istanbul ignore next */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const createTextNode = text => doc.createTextNode(text)\n\n/* istanbul ignore next */\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\n/* istanbul ignore next */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\n/* istanbul ignore next */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\n/* istanbul ignore next */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\n/* istanbul ignore next */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\n/* istanbul ignore next */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\n/* istanbul ignore next */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\n/* istanbul ignore next */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\n/* istanbul ignore next */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\n/* istanbul ignore next */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n"]},"metadata":{},"sourceType":"module"}