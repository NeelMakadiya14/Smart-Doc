{"ast":null,"code":"/**\n * Utility module to work with urls.\n *\n * @module url\n */\nimport * as object from './object.js';\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\n\nexport var decodeQueryParams = function decodeQueryParams(url) {\n  /**\n   * @type {Object<string,string>}\n   */\n  var query = {};\n  var urlQuerySplit = url.split('?');\n  var pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&');\n\n  for (var i = 0; i < pairs.length; i++) {\n    var item = pairs[i];\n\n    if (item.length > 0) {\n      var pair = item.split('=');\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n    }\n  }\n\n  return query;\n};\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\n\nexport var encodeQueryParams = function encodeQueryParams(params) {\n  return object.map(params, function (val, key) {\n    return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(val));\n  }).join('&');\n};","map":{"version":3,"sources":["/media/neel/DATA/WebD/Smart Doc/client/node_modules/lib0/url.js"],"names":["object","decodeQueryParams","url","query","urlQuerySplit","split","pairs","length","i","item","pair","decodeURIComponent","encodeQueryParams","params","map","val","key","encodeURIComponent","join"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,OAAO,KAAKA,MAAZ,MAAwB,aAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,GAAG,EAAI;AACtC;AACF;AACA;AACE,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,aAAa,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAtB;AACA,MAAMC,KAAK,GAAGF,aAAa,CAACA,aAAa,CAACG,MAAd,GAAuB,CAAxB,CAAb,CAAwCF,KAAxC,CAA8C,GAA9C,CAAd;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACC,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACrC,QAAMC,IAAI,GAAGH,KAAK,CAACE,CAAD,CAAlB;;AACA,QAAIC,IAAI,CAACF,MAAL,GAAc,CAAlB,EAAqB;AACnB,UAAMG,IAAI,GAAGD,IAAI,CAACJ,KAAL,CAAW,GAAX,CAAb;AACAF,MAAAA,KAAK,CAACQ,kBAAkB,CAACD,IAAI,CAAC,CAAD,CAAL,CAAnB,CAAL,GAAqCC,kBAAkB,CAACD,IAAI,CAAC,CAAD,CAAJ,IAAW,EAAZ,CAAvD;AACD;AACF;;AACD,SAAOP,KAAP;AACD,CAfM;AAiBP;AACA;AACA;AACA;;AACA,OAAO,IAAMS,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,MAAM;AAAA,SACrCb,MAAM,CAACc,GAAP,CAAWD,MAAX,EAAmB,UAACE,GAAD,EAAMC,GAAN;AAAA,qBAAiBC,kBAAkB,CAACD,GAAD,CAAnC,cAA4CC,kBAAkB,CAACF,GAAD,CAA9D;AAAA,GAAnB,EAA0FG,IAA1F,CAA+F,GAA/F,CADqC;AAAA,CAAhC","sourcesContent":["/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (var i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n"]},"metadata":{},"sourceType":"module"}