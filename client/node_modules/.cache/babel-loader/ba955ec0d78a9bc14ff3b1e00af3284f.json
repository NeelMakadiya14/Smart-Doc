{"ast":null,"code":"/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport var createMutex = function createMutex() {\n  var token = true;\n  return function (f, g) {\n    if (token) {\n      token = false;\n\n      try {\n        f();\n      } finally {\n        token = true;\n      }\n    } else if (g !== undefined) {\n      g();\n    }\n  };\n};","map":{"version":3,"sources":["/media/neel/DATA/WebD/Smart Doc/client/node_modules/lib0/mutex.js"],"names":["createMutex","token","f","g","undefined"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,MAAIC,KAAK,GAAG,IAAZ;AACA,SAAO,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACf,QAAIF,KAAJ,EAAW;AACTA,MAAAA,KAAK,GAAG,KAAR;;AACA,UAAI;AACFC,QAAAA,CAAC;AACF,OAFD,SAEU;AACRD,QAAAA,KAAK,GAAG,IAAR;AACD;AACF,KAPD,MAOO,IAAIE,CAAC,KAAKC,SAAV,EAAqB;AAC1BD,MAAAA,CAAC;AACF;AACF,GAXD;AAYD,CAdM","sourcesContent":["/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport const createMutex = () => {\n  let token = true\n  return (f, g) => {\n    if (token) {\n      token = false\n      try {\n        f()\n      } finally {\n        token = true\n      }\n    } else if (g !== undefined) {\n      g()\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}