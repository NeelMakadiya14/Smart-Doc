export function normQuillDelta(delta: any): any;
export class QuillBinding {
    /**
     * @param {Y.Text} type
     * @param {any} quill
     * @param {Awareness} [awareness]
     */
    constructor(type: Y.Text, quill: any, awareness?: Awareness | undefined);
    mux: import("lib0/mutex").mutex;
    type: Y.Text;
    doc: Y.Doc;
    quill: any;
    quillCursors: any;
    _negatedUsedFormats: {};
    awareness: Awareness | undefined;
    _awarenessChange: ({ added, removed, updated }: {
        added: any;
        removed: any;
        updated: any;
    }) => void;
    _typeObserver: (event: any) => void;
    _quillObserver: (eventType: any, delta: any) => void;
    destroy(): void;
}
import * as Y from "yjs";
import { Awareness } from "y-protocols/awareness";
